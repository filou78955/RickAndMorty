{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/mnt/e/Skillos/RickAndMorty/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Header from \"./components/header\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  useEffect(function () {\n    fetch('https://rickandmortyapi.com/api/character').then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setData(json.results);\n    }).catch(function (error) {\n      return console.error(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n\n  var colorStatus = function colorStatus(item, style) {\n    var color = \"\";\n\n    switch (item) {\n      case 'Dead':\n        color = style.redCircle;\n        break;\n\n      case 'Alive':\n        color = style.greenCircle;\n        break;\n\n      case 'unknown':\n        color = style.greyCircle;\n        break;\n\n      default:\n        null;\n    }\n\n    return color;\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, \"// use the header component\", React.createElement(Header, {\n    center: React.createElement(Text, {\n      style: {\n        color: '#7CBC6C',\n        fontSize: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }\n    }, \"Rick & Morty\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), isLoading ? React.createElement(ActivityIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 20\n    }\n  }) : React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(_ref, index) {\n      var id = _ref.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: styles.card,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.image\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        style: styles.infos,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, item.name, \" \"), React.createElement(Text, {\n        style: styles.details,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: colorStatus(item.status, styles),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }\n      }), \"  \", item.status, \" - \", item.species), React.createElement(Text, {\n        style: styles.details,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, \"Gendre: \", item.gender), React.createElement(Text, {\n        style: styles.details,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, \"Origin:  \", item.location.name)));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black'\n  },\n  card: {\n    flexDirection: \"row\",\n    marginTop: 20,\n    maxHeight: 500,\n    minHeight: 150,\n    width: 380,\n    backgroundColor: '#7CBC6C',\n    borderRadius: 10,\n    justifyContent: 'center',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  image: {\n    flex: 1,\n    padding: 30,\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10\n  },\n  infos: {\n    flex: 2,\n    marginLeft: 10,\n    marginTop: 10,\n    flexDirection: 'column',\n    paddingBottom: 10,\n    paddingRight: 10\n  },\n  name: {\n    color: 'white',\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  details: {\n    color: 'white',\n    marginTop: 10,\n    fontSize: 10\n  },\n  redCircle: {\n    width: 10,\n    height: 10,\n    borderRadius: 100 / 2,\n    backgroundColor: '#F44040'\n  },\n  greenCircle: {\n    width: 10,\n    height: 10,\n    borderRadius: 100 / 2,\n    backgroundColor: '#59F440'\n  },\n  greyCircle: {\n    width: 10,\n    height: 10,\n    borderRadius: 100 / 2,\n    backgroundColor: '#969595'\n  }\n});","map":{"version":3,"sources":["/mnt/e/Skillos/RickAndMorty/App.js"],"names":["React","useEffect","useState","Header","App","isLoading","setLoading","data","setData","fetch","then","response","json","results","catch","error","console","finally","colorStatus","item","style","color","redCircle","greenCircle","greyCircle","styles","container","fontSize","index","id","card","image","uri","infos","name","details","status","species","gender","location","StyleSheet","create","flex","backgroundColor","flexDirection","marginTop","maxHeight","minHeight","width","borderRadius","justifyContent","marginLeft","marginRight","padding","borderTopLeftRadius","borderBottomLeftRadius","paddingBottom","paddingRight","fontWeight","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, FlatList, StyleSheet, Text, View, Image } from 'react-native';\nimport Header from './components/header';\n\nexport default function App() {\n\n\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n\n  // call the rick & morty api and set the data with the json.results\n  useEffect(() => {\n    fetch('https://rickandmortyapi.com/api/character')\n      .then((response) => response.json())\n      .then((json) => setData(json.results))\n      .catch((error) => console.error(error))\n      .finally(() => setLoading(false));\n  }, []);\n\n  // give the right style name to the render using the item.status\n  const colorStatus= (item, style) => {\n    let color = \"\";\n    switch (item) {\n      case 'Dead':\n        color= style.redCircle;\n        break;\n      case 'Alive':\n          color= style.greenCircle;\n          break;\n      case 'unknown':\n          color= style.greyCircle\n          break;\n      default:\n        null;\n    }\n    return color;\n  }\n  return (\n    <View style={styles.container}>\n    // use the header component\n      <Header\n          center={<Text style={{ color: '#7CBC6C', fontSize: 20 }} >Rick & Morty</Text>}\n        />\n      \n      {isLoading ? <ActivityIndicator/> : (\n        <FlatList\n          data={data}\n          keyExtractor={({ id }, index) => id}\n          renderItem={({ item }) => (\n            <View style={styles.card}>\n              <Image\n                style={styles.image}\n                source={{\n                  uri: item.image}}\n              />\n              <View style={styles.infos}>\n                <Text style={styles.name}>{item.name} </Text>\n                <Text style={styles.details}>\n                  <View style={colorStatus(item.status, styles)}>\n                    \n                  </View>  {item.status} - {item.species}</Text>\n                <Text style={styles.details}>Gendre: {item.gender}</Text>\n                <Text style={styles.details}>Origin:  {item.location.name}</Text>\n\n              </View>\n            </View>\n          )}\n        />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n  },\n  card: {\n    flexDirection:\"row\",\n    marginTop: 20,\n    maxHeight: 500,\n    minHeight: 150,\n    width: 380,\n    backgroundColor: '#7CBC6C',\n    borderRadius: 10,\n    justifyContent: 'center',\n    marginLeft:'auto',\n    marginRight:'auto',\n  },\n  image:{\n    flex:1,\n    padding: 30,\n    borderTopLeftRadius:10,\n    borderBottomLeftRadius:10\n  },\n  infos:{\n    flex:2,\n    marginLeft:10,\n    marginTop:10,\n    flexDirection:'column',\n    paddingBottom: 10,\n    paddingRight: 10\n  },\n  name:{\n    color:'white',\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  details:{\n    color:'white',\n    marginTop:10,\n    fontSize: 10\n  },\n  redCircle: {\n    width: 10,\n    height: 10,\n    borderRadius: 100 / 2,\n    backgroundColor:'#F44040',\n  },\n  greenCircle: {\n    width: 10,\n    height: 10,\n    borderRadius: 100 / 2,\n    backgroundColor:'#59F440',\n  },\n  greyCircle: {\n    width: 10,\n    height: 10,\n    borderRadius: 100 / 2,\n    backgroundColor:'#969595'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}